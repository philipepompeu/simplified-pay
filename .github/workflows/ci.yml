name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Análise estática do código com checkstyle
        run: mvn checkstyle:check

      - name: Construir e rodar testes
        run: mvn clean install        

      - name: Armazenar resultados dos testes em caso de falha
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: target/surefire-reports/
  publish-to-docker-hub:
    needs: build
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      
      - name: Configurar JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build sem testes
        run: mvn clean package -DskipTests        

      - name: Login no Docker Hub
        run: docker login -u ${{secrets.docker_hub_username}} -p ${{secrets.docker_hub_pwd}}

      - name: Construir a imagem Docker
        run: docker build -t ${{ secrets.docker_hub_username }}/simplified-pay:latest .

      - name: Publicar imagem no Docker Hub
        run: docker push ${{ secrets.docker_hub_username }}/simplified-pay:latest